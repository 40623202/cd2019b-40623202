<h1>簡介</h1>
<p>本網站為<span>期末個人網站。</span></p>
<p><span>我在分組工作中主要負責執行規劃的部份。</span></p>
<p><span>個人倉儲:<a href="https://github.com/40623202/cd2019b-40623202">https://github.com/40623202/cd2019b-40623202</a></span></p>
<p><span>第二組分組倉儲:<a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g2">https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g2</a></span></p>
<h1>手足球V-rep基本模擬</h1>
<p>手足球的基本模擬練習。</p>
<p>手足球模擬基本操作影片</p>
<p>1. 手足球模擬基本操作練習</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/dyp852-2TzY" width="560"></iframe></p>
<p>2. 手足球基本組裝練習</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PH-y6gFfJIs" width="560"></iframe></p>
<p>3. 手足球模擬內部勾選</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/78nI091R5_Y" width="560"></iframe></p>
<h1>每週進度</h1>
<table border="1" style="width: 551px; border-color: #141113; background-color: #f2e9e9;"><caption></caption>
<tbody>
<tr style="height: 68px;">
<td style="width: 134px; height: 68px;">第十週(2019/04/26)</td>
<td style="width: 415px; height: 68px;">各組期末報告說明。</td>
</tr>
<tr style="height: 164px;">
<td style="width: 134px; height: 164px;">第十一週(<span>2019/05/03)</span></td>
<td style="width: 415px; height: 164px;">
<p>1. 本週確定分配任務，而我主要負責手足球求模擬執行規劃，與組員進行初步規畫討論。</p>
<p>2. 對全班期末倉儲進行fork，並了解pull request的使用方式。</p>
</td>
</tr>
<tr style="height: 145px;">
<td style="width: 134px; height: 145px;">第十二週<span>(</span><span>2019/05/10)</span></td>
<td style="width: 415px; height: 145px;">
<p>1. 規劃手足球模擬的進度。</p>
<p>2. 進行手足球基本操作的模擬 (<a href="https://www.youtube.com/watch?v=dyp852-2TzY">影片連結</a>)</p>
</td>
</tr>
<tr style="height: 145px;">
<td style="width: 134px; height: 145px;">第十三週<span>(</span><span>2019/05/17)</span></td>
<td style="width: 415px; height: 145px;">
<p>1.進行手足球基本操作的模擬<span> (</span><a href="https://www.youtube.com/watch?v=PH-y6gFfJIs">影片連結</a><span>)</span></p>
<p>2.手足球模擬內部勾選<span> (</span><a href="https://www.youtube.com/watch?v=78nI091R5_Y&amp;feature=youtu.be">影片連結</a><span>)</span></p>
</td>
</tr>
<tr style="height: 68px;">
<td style="width: 134px; height: 68px;">第十四週<span>(</span><span>2019/05/24)</span></td>
<td style="width: 415px; height: 68px;">持續討論及撰寫手足球模擬規劃。</td>
</tr>
<tr style="height: 68px;">
<td style="width: 134px; height: 68px;">第十五週<span>(</span><span>2019/05/31)</span></td>
<td style="width: 415px; height: 68px;">持續討論及撰寫手足球模擬規劃。</td>
</tr>
<tr style="height: 68px;">
<td style="width: 134px; height: 68px;">第十六週<span>(</span><span>2019/05/03)</span></td>
<td style="width: 415px; height: 68px;">端午連假，持續討論及撰寫手足球模擬規劃。</td>
</tr>
<tr style="height: 251px;">
<td style="width: 134px; height: 251px;">第十七週<span>(</span><span>2019/06/07)</span></td>
<td style="width: 415px; height: 251px;">
<p>1.完成"專案成果摘要"以及"專案執行內容"</p>
<p>2.上台報告(<a href="https://youtu.be/bW3vqJRxjdw">期末心得報告影片</a>)</p>
</td>
</tr>
<tr style="height: 68px;">
<td style="width: 134px; height: 68px;">第十八週<span>(</span><span>2019/06/14)</span></td>
<td style="width: 415px; height: 68px;">期末考週</td>
</tr>
</tbody>
</table>
<h1>出缺席</h1>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g2/content/Attendance%20table.html">出缺席表連結</a></p>
<h1>期末自我評量</h1>
<p>期末心得報告影片 <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bW3vqJRxjdw" width="560"></iframe><br/><span> </span></p>
<p><br/> 學員出席 (20%):100<br/> Github 倉儲管理 (20%):100<br/>Onshape 協同操作 (20%):62<br/> V-rep 模擬 (20%):63<br/>程式開發 (20%):0</p>
<p><span>自評分數:65</span></p>
<p><span> </span></p>
<h1>期末測驗-夾娃娃機</h1>
<h2>onshape繪製</h2>
<p><a href="/downloads/夾娃娃機.stl">娃娃機stl檔案下載點</a></p>
<ul>
<li>利用分支讓組員們可以分工繪製各零組件，繪製完成後合併到主圖面。</li>
</ul>
<p><img alt="" height="525" src="/images/ONSHAPE娃娃機.PNG" width="499"/></p>
<p></p>
<ul>
<li>我負責繪製娃娃機外殼</li>
</ul>
<p></p>
<p><img alt="" height="543" src="/images/機台.PNG" width="437"/></p>
<p></p>
<p></p>
<ul>
<li>組裝完成的娃娃機<img alt="" height="532" src="/images/組裝完成.PNG" width="432"/></li>
</ul>
<p></p><h2>版本1 - X Y軸作動</h2>
<p><a href="https://drive.google.com/open?id=1rWMu53H_XaNc13cKZq6JDfKDGqUBj5un">v-rep檔案下載點</a></p>
<p>利用方向鍵控制:</p>
<p>→ :Y軸向右移動</p>
<p>←:Y軸向左移動</p>
<p>↓:X軸向前移動</p>
<p>↑:X軸向後移動</p>
<p>W:Z軸向上移動</p>
<p>S:Z軸向下移動</p>
<p></p>
<p>版本1影片:</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/rynpn9voz1I" width="560"></iframe></p>
<p>版本1程式碼:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- model in Solvespace 500 mm = 5000 mm in V-rep
--[[
Simulation is 10 times of realistic environment
floor in Solvespace 2.5 m x 2.5 m = 25 m x 25 m in V-rep
ball is in Solivespace 1g (0.001) = 0.01 kg in V-rep
hammer is in Solvespace 0.1 kg (100g) = 1kg in V-rep (0.1 for Inertia)
]]
--local joint_r = {'left_joint1','left_joint2','left_joint3','left_joint4',}
local slider_x ='slider_x'
local slider_y ='slider_y'
local slider_z ='slider_z'

threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('key:'..key)
            if (message == sim.message_keypress) then
                if (auxiliaryData[1]==2007) then
                    -- up key
                    if (sliding_y&gt;=0.3)then else sliding_y = sliding_y + 0.005 end  
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==2008)  then
                    -- down key
                    if (sliding_y&lt;=-0.3)then else sliding_y = sliding_y - 0.005 end  
                    sim.addStatusbarMessage('sliding_y:'..sliding_y)
                end
                if (auxiliaryData[1]==2010)  then
                    -- right key 
                    if (sliding_x&gt;=0.3)then else sliding_x = sliding_x + 0.005 end  
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==2009)  then
                    -- left key
                    if (sliding_x&lt;=-0.3)then else sliding_x = sliding_x - 0.005 end                   
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==119)  then
                    -- z-up key 
                    if (sliding_z&gt;=0.3)then else sliding_z = sliding_z + 0.005 end  
                    sim.addStatusbarMessage('sliding_z:'..sliding_z)
                end
                if (auxiliaryData[1]==115)  then
                    -- z-down key
                    if (sliding_z&lt;=-0.3)then else sliding_z = sliding_z - 0.005 end  
                    sim.addStatusbarMessage('sliding_z:'..sliding_z)
                end
             end
                message,auxiliaryData=sim.getSimulatorMessage()
        end
            -- We take care of setting the desired hammer position:
            --sim.setJointForce(joint,torque)
            sim.setJointTargetPosition(slider_x, sliding_x)
            sim.setJointTargetPosition(slider_y, sliding_y)
            sim.setJointTargetPosition(slider_z, sliding_z)
            --Since this script is threaded, don't waste time here:
            sim.switchThread() -- Resume the script at next simulation loop start
    end

end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
slider_x=sim.getObjectHandle(slider_x)
slider_y=sim.getObjectHandle(slider_y)
slider_z=sim.getObjectHandle(slider_z)
velocity=0
hammer_back=0
torque=0
sliding_x = 0
sliding_y = 0
sliding_z = 0
--orientation=sim.getJointPosition(joint_all_c1, -1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:</pre>
<h2>版本2 - X Y軸作動+開爪</h2>
<p><a href="https://drive.google.com/open?id=1KqeJ-czE13wbs6O8evFAiMMzbgPbBdiA">v-rep檔案下載點</a></p>
<p>利用方向鍵控制:</p>
<p>→ :Y軸向右移動</p>
<p>←:Y軸向左移動</p>
<p>↓:X軸向前移動</p>
<p>↑:X軸向後移動</p>
<p>W:Z軸向上移動</p>
<p>S:Z軸向下移動</p>
<p>W:開爪</p>
<p>X:合爪</p>
<p>版本2影片: <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2YfNLJKRBDc" width="560"></iframe></p>
<p></p>
<p>版本2程式碼:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- model in Solvespace 500 mm = 5000 mm in V-rep
--[[
Simulation is 10 times of realistic environment
floor in Solvespace 2.5 m x 2.5 m = 25 m x 25 m in V-rep
ball is in Solivespace 1g (0.001) = 0.01 kg in V-rep
hammer is in Solvespace 0.1 kg (100g) = 1kg in V-rep (0.1 for Inertia)
]]
local joint_r = {'joint1','joint2','joint3','joint4',}
local slider_x ='slider_x'
local slider_y ='slider_y'
local slider_z ='slider_z'

threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('key:'..key)
            if (message == sim.message_keypress) then
                if (auxiliaryData[1]==2007) then
                    -- up key
                    if (sliding_y&gt;=0.3)then else sliding_y = sliding_y + 0.005 end  
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==2008)  then
                    -- down key
                    if (sliding_y&lt;=-0.3)then else sliding_y = sliding_y - 0.005 end  
                    sim.addStatusbarMessage('sliding_y:'..sliding_y)
                end
                if (auxiliaryData[1]==2010)  then
                    -- right key 
                    if (sliding_x&gt;=0.3)then else sliding_x = sliding_x + 0.005 end  
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==2009)  then
                    -- left key
                    if (sliding_x&lt;=-0.3)then else sliding_x = sliding_x - 0.005 end                   
                    sim.addStatusbarMessage('sliding_x:'..sliding_x)
                end
                if (auxiliaryData[1]==119)  then
                    -- z-up key 
                    if (sliding_z&gt;=0.3)then else sliding_z = sliding_z + 0.005 end  
                    sim.addStatusbarMessage('sliding_z:'..sliding_z)
                end
                if (auxiliaryData[1]==115)  then
                    -- z-down key
                    if (sliding_z&lt;=-0.3)then else sliding_z = sliding_z - 0.005 end  
                    sim.addStatusbarMessage('sliding_z:'..sliding_z)
                end
if  (auxiliaryData[1]==122)then
                    --  key-z
                    joint_all_c1=sim.getObjectHandle(joint_r[1])
                    joint_all_c2=sim.getObjectHandle(joint_r[2])  
                    joint_all_c3=sim.getObjectHandle(joint_r[3])
                    joint_all_c4=sim.getObjectHandle(joint_r[4]) 

                    velocity=200
                    torque=500
                    hammer_back = 0
end                    
                if  (auxiliaryData[1]==120)then
                     --  key-x
                    joint_all_c1=sim.getObjectHandle(joint_r[1])
                    joint_all_c2=sim.getObjectHandle(joint_r[2])  
                    joint_all_c3=sim.getObjectHandle(joint_r[3])
                    joint_all_c4=sim.getObjectHandle(joint_r[4]) 

                    velocity=200
                    torque=-500
                    hammer_back = 0
end                    
             end
                message,auxiliaryData=sim.getSimulatorMessage()
        end

            -- We take care of setting the desired hammer position:
if hammer_back == 1
            then 
            sim.setJointTargetPosition(joint_all_c1, velocity)
            sim.setJointTargetPosition(joint_all_c2, velocity)
            sim.setJointTargetPosition(joint_all_c3, velocity)
            sim.setJointTargetPosition(joint_all_c4, velocity)
            --sim.setObjectPosition(hammer, -1, position)
        end
            sim.setJointTargetPosition(joint_all_c1, velocity)
            sim.setJointTargetPosition(joint_all_c2, velocity)
            sim.setJointTargetPosition(joint_all_c3, velocity)
            sim.setJointTargetPosition(joint_all_c4, velocity)
            --sim.setJointForce(joint,torque)
            sim.setJointTargetPosition(slider_x, sliding_x)
            sim.setJointTargetPosition(slider_y, sliding_y)
            sim.setJointTargetPosition(slider_z, sliding_z)
            --Since this script is threaded, don't waste time here:
            sim.switchThread() -- Resume the script at next simulation loop start
    end

end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint_all_c1=sim.getObjectHandle(joint_r[1])
joint_all_c2=sim.getObjectHandle(joint_r[2])
joint_all_c3=sim.getObjectHandle(joint_r[3])
joint_all_c4=sim.getObjectHandle(joint_r[4])
slider_x=sim.getObjectHandle(slider_x)
slider_y=sim.getObjectHandle(slider_y)
slider_z=sim.getObjectHandle(slider_z)
velocity=0
hammer_back=0
torque=0
hammer_back=0
sliding_x = 0
sliding_y = 0
sliding_z = 0
orientation=sim.getJointPosition(joint_all_c1, -1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:</pre>
<p></p>